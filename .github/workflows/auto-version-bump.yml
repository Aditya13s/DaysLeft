name: Auto Version Bump

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      bump_type:
        description: 'Type of version bump'
        required: true
        default: 'patch'
        type: choice
        options:
        - patch
        - minor
        - major

jobs:
  version-bump:
    runs-on: ubuntu-latest
    # Only run if the push doesn't contain a version bump commit (to avoid infinite loops)
    if: "!contains(github.event.head_commit.message, 'Bump version to')"
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0  # Fetch full history for changelog generation

      - name: Set up Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Determine bump type
        id: bump_type
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "BUMP_TYPE=${{ github.event.inputs.bump_type }}" >> $GITHUB_ENV
          else
            # Analyze commit messages to determine bump type
            COMMITS=$(git log --pretty=format:"%s" ${{ github.event.before }}..${{ github.event.after }})
            
            if echo "$COMMITS" | grep -qE "^(feat|feature)(\(.*\))?!?:.*BREAKING.CHANGE|^.*!:"; then
              echo "BUMP_TYPE=major" >> $GITHUB_ENV
            elif echo "$COMMITS" | grep -qE "^(feat|feature)(\(.*\))?:"; then
              echo "BUMP_TYPE=minor" >> $GITHUB_ENV
            else
              echo "BUMP_TYPE=patch" >> $GITHUB_ENV
            fi
          fi

      - name: Make scripts executable
        run: chmod +x scripts/*.sh

      - name: Run release process
        run: ./scripts/release.sh ${{ env.BUMP_TYPE }}

      - name: Push changes
        run: |
          NEW_VERSION=$(grep 'versionName = ' app/build.gradle.kts | head -1 | sed 's/.*"\(.*\)".*/\1/')
          git push origin main
          git push origin "v$NEW_VERSION"
          echo "Pushed version $NEW_VERSION"